MERCI DE BIEN SUIVRE L'ORGANISATION DU PROJET



index.py sert juste à ajouter les import et etc

Surtout, bien nommer les variables : un label commencera toujours avec lb_, un bouton par bt_ etc (bien regarder le code précédent)
Penser à bien donner des noms longs pour être sûr de ne pas avoir de doublons dans les variables, ce qui peut poser de gros problèmes 
et gêner l'organisation du projet.




On fera donc la version du Planning Poker jouable à plusieurs sur la même machine, et si on a du temps en plus,
on pourra engager la suite.


Ok      - Nombre de joueurs + pseudos
Ok      - Règles planning poker (strict et moyenne)
Ok      - Renommer le projet
Ok      - Entrer une liste de fonctionnalité du backlog (pour le projet) 
- Quand tout le backlog (liste de fonctionnalité est valide) on enregistre le res pour chaque fonct en JSON dans un fichier
- Si tous les joueurs ont mis la carte café =  enregistremebt de la partie en cours pour pouvoir la reprnendre (possibilité de la charger via le menu)
- 3 patterns design
- AJOUTER SAUVEGARDE EN JSON





#################### NOTATION ####################
Réalisation et exécution : 10 points
Clone git qui fonctionne (0,5 pts)
Code qui tourne directement sur l’ordinateur de l’évaluateur (1 pt)
Qualité du code (2 pts)
Structure globale du code (0,5 pts)
README et respect des consignes (1 pts)
Interface (UI) propre (1 pts)
"Modes" de jeu implémentées (2 pts)
Chargement/sauvegarde de fichier JSON (1 pts)
Patterns mis en œuvre (1 pts)
Mise en place de l'intégration continue (2pts)
Tests unitaires
Génération de la documentation
Rapport et modélisation : 10 points
Justifications des Patterns utilisés (3 patterns) (3pts)
justification des choix techniques (architecture, langage, classes, etc.) (3pts)
Documentation (2pts)
Explication de la mise en place de l'intégration continue (2pts)
Tests unitaires
Génération de documentation
Les points suivants entrainent des malus (jusqu’à -5 pts)
Contenu et forme (voir ci-dessus)
Orthographe








